[33mcommit b813824933114ab4cad799fb82784e553fdaec18[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Apr 28 07:48:37 2022 +0200

    Fixed problem with pre-sizing of array FIFO queues

[33mcommit 438914f976823372b08e69736963867147d6b950[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Apr 28 07:33:28 2022 +0200

    Added test for exactly full queue

[33mcommit 63f23010f162c258ade716cee7479836c2bd61d5[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 4 11:30:09 2022 +0000

    Fixed

[33mcommit a637cf8b1850651a49fc12ef463c1ce61a9bfca1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Mar 3 15:37:50 2022 +0000

    Fixed overflow bug in [Big]Arrays.ensureOffsetLength()

[33mcommit 4e5ab259cc13cd0ec3713246fe5088349b0c3e5f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 25 09:14:12 2022 +0100

    Docs on close()

[33mcommit 88e2dd18e24b206216391399020eacdff99e9b75[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Feb 12 18:51:55 2022 +0000

    Tweaking

[33mcommit 646601d544d9561f560999161c73bc654664c01b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Feb 12 18:50:40 2022 +0000

    Tweaking

[33mcommit 6c3f68a8c9e75ea68c126d6e5977839f1892dd9f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Feb 12 18:47:32 2022 +0000

    Added example

[33mcommit c45989c3d8dbc99eccd5219ad1678b68461bb59f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 23:55:48 2022 +0000

    Fixed docs

[33mcommit dc909bb15d7cb0b9d40d7382bf7bb0a5c6c517e0[m[33m ([m[1;33mtag: 8.5.8[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 17:25:40 2022 +0000

    Last fixes, bumped version

[33mcommit 8bca5d4510b1c86b1011255cfb19fa70785ca032[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 15:12:53 2022 +0000

    Improving docs

[33mcommit 9b62a5a1b6c03ce39573b0caefcf831729856aab[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 14:45:44 2022 +0100

    Tweaking

[33mcommit b6a27dd8758dc0aad4177cd3cf5a788ae68753dd[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 12:42:42 2022 +0100

    Fixes

[33mcommit 0e65edc6e6b161f19814d6f7d1807dab894c1579[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 10:36:25 2022 +0100

    Completed tests for booleans and bytes

[33mcommit 3bfbc20fa325e9ea02544dcfca096e35dee6f92f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 10 04:03:55 2022 +0100

    Restored version 8

[33mcommit 8d8195cc9bdec205541853468642acf0252ee693[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 22:56:35 2022 +0100

    Channel-based methods for bytes

[33mcommit 6caeda017820d55cbbbf790e67aa0a6de7a79e3b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 21:21:36 2022 +0100

    Converted old methods to nio where possible

[33mcommit 5d2d7a374279ac710dc1e91a8e5d88c3a786113b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 16:56:19 2022 +0100

    Refinement of nio-based load/store methods

[33mcommit 5a307b108955e0273f074aa8a12dee649081f713[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 15:13:02 2022 +0100

    First implementation of nio-based load/store methods

[33mcommit df4adf6860363aaf59f297e31693ae5e6987e6ca[m[33m ([m[1;33mtag: 8.5.7[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 08:13:01 2022 +0100

    Tweaking

[33mcommit 50e4c2771fa2574af74a3f7f9900105104f46b6d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 07:49:43 2022 +0100

    Added settings

[33mcommit d5df0c712d19164fce00ffea47f1cd03f0a6cf7a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Feb 9 07:43:10 2022 +0100

    Bumped revision

[33mcommit 2238ca26dc4df42981de43f20ca700cb05d211c0[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Feb 8 11:22:59 2022 +0100

    Bumped dates

[33mcommit 2bd9d7176e20f0ef23b3e247ee1791e21b4789ed[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Feb 8 11:21:30 2022 +0100

    Bumped dates

[33mcommit b3048ae9f0723fe96d642e8062f8cc4cb14aa755[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Feb 8 11:20:58 2022 +0100

    Better code

[33mcommit 399c5a532dfbbc0a85475ede5d22bb4a60c1fefb[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 18:22:46 2022 +0100

    Completed setup for first set of Guava-based tests

[33mcommit 598a4fd064e193be69ea324aa86947477c82ede8[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 18:03:05 2022 +0100

    New Guava-based tests and related fixes

[33mcommit a6514173b04cbc8d681167953ee30a817c5a7edf[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 16:38:51 2022 +0100

    Fixed problem with null key on empty tree

[33mcommit 57311463d85d33edcef0e665fd8d08c5ff02079e[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 14:16:51 2022 +0100

    Starting separate Guava-based test suite

[33mcommit 20941441dabb1a6aed97e0369f5aeaefe150925a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 14:15:56 2022 +0100

    Starting separate Guava-based test suite

[33mcommit bf3892a519fa6c71b868db8c338368dd464d86a1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 11:42:00 2022 +0100

    Fixed thresholds in radix sort

[33mcommit e3fc264399ce718c596d6055c71f93a6fe5e5ca5[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 10:02:32 2022 +0100

    Interim

[33mcommit 4ad86fd4392ce0a8c6281805859351c4ef1acd41[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Feb 4 09:19:19 2022 +0100

    Fast getElements() for arrays

[33mcommit 29d210a5158331a8e60983f7dee3ac3f26c6ae67[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 20:54:44 2022 +0100

    Fixed

[33mcommit c2a046f5eb4d6def787327b247d9888485fcb92a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 20:54:25 2022 +0100

    Removed chaining

[33mcommit f59c839bc0591a66dad9f7e97aa80810cefc72e8[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 20:29:12 2022 +0100

    Fast getElements() for arrays

[33mcommit 546d791b65cbdc2f0407cc635cc1586c0218b80a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 20:05:22 2022 +0100

    Improved buffer usage

[33mcommit 16241633d68206ecba9286358aff62216b89e53d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 13:53:55 2022 +0100

    Tweaking

[33mcommit 201e3d743f2e5a9f6b60ae7e42ab8cb5a03aa91a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 13:28:09 2022 +0100

    Tests for mapped big lists

[33mcommit 6e8435cfb7e115f20cf36d1931a99fd149e7e4c9[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 3 12:59:06 2022 +0100

    Mapped big lists

[33mcommit cfe0dc507db1cd0027a349a637e407c4a91117a2[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Sep 11 09:33:31 2021 +0200

    Fixed broken POM generation

[33mcommit 9231bf90bda53caec355f5e61196a0c036bc7c45[m[33m ([m[1;33mtag: 8.5.6[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Sep 7 16:49:40 2021 +0200

    Fixed broken export clause

[33mcommit 79ea195f2a243843adb222ed958e97a4fcd6fa70[m[33m ([m[1;33mtag: 8.5.5[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Sep 7 10:45:50 2021 +0200

    Fixed README

[33mcommit f21fbb6293824272c852f0c2797c0b4ddb2472f5[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Sep 7 10:31:07 2021 +0200

    Fixed doc references

[33mcommit 40ddda60d69c75cf6aa105028ab94672b7a9a454[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Aug 13 19:21:38 2021 +0200

    Fixed problem with load factor in immutable sets

[33mcommit 58ed44edae4f88636ae5f97e10a2e8a7c04c45d2[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Aug 13 19:21:18 2021 +0200

    Fixed problem with load factor in immutable sets

[33mcommit c8050c0f23f1a433735eb50e395f0fc5dedd2221[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 18:38:45 2021 +0200

    Completed new distribution layout

[33mcommit 82e2ad359fd09fbe8dfb7ef40a0fc5a6abb60976[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 17:32:53 2021 +0200

    Completed object-based map combining functions

[33mcommit 5f537af3b63a2471464e4650840159d9bc5c3033[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 16:58:17 2021 +0200

    Fixed inheritance conflict

[33mcommit 34669787553762d01619e36d9cd874c4c4ae64ff[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 16:22:50 2021 +0200

    Interim

[33mcommit 67c0875daa9f8331ae8c13f5f7297829dc24dc81[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 15:11:34 2021 +0200

    Removed extra POM

[33mcommit 0eb894eecb5879256e7644be4b14e8be6bec7bb6[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 15:06:49 2021 +0200

    Do not remove sources

[33mcommit 814f3b11b85b8b15dee0098cc6346b81e3e33eef[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 15:01:17 2021 +0200

    Tentative implementation of object-based map combining functions

[33mcommit 47d920c8c22a99c055ea0ea9e89edf169136ed9d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 15:00:29 2021 +0200

    New tentative layout

[33mcommit 38ba8b648a75504d1baafc721325b7c1b06213f6[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Aug 4 14:59:33 2021 +0200

    New tentative layout

[33mcommit 3d344562f8eb3f289a776816f3e6c163fefaf798[m
Merge: be441e34 80d10b43
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jul 14 09:21:14 2021 +0200

    Merge pull request #259 from stachenov/safe-outputstream
    
    Fix FastBufferedOutputStream.close() exception

[33mcommit 80d10b43439b7647bd43adceb9d6136bf6438a12[m
Author: Sergei Tachenov <sergei@tachenov.name>
Date:   Fri Jul 9 20:45:16 2021 +0300

    Fix FastBufferedOutputStream.close() exception
    
    If the output is closed before FastBufferedOutputStream is closed, then
    close() would throw because flush() would try to write the buffer,
    even if there's nothing to write.
    
    This can happen if the output is a socket, for example, that is managed
    separately from the output stream.
    
    Fix by not calling write() if there is nothing to write.
    
    If the buffer is not empty, then it would still try to write it, and
    would throw, which is probably correct.

[33mcommit be441e3467f18fc58a9c0028381e740ec08ca8f0[m
Merge: d5075590 0b15d5d8
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Apr 24 23:42:29 2021 +0100

    Merge pull request #252 from mernst/koloboke-link
    
    Update links to Koloboke

[33mcommit 0b15d5d8bdb2886c935f4b6647d2ed20fe9202dc[m
Author: Michael Ernst <mernst@cs.washington.edu>
Date:   Sat Apr 24 09:12:45 2021 -0700

    Update links to Koloboke

[33mcommit d50755909fcb2aac258b0d7a8af1134b649e0e88[m
Merge: a5fb0722 1fd06325
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Apr 20 13:26:49 2021 +0100

    Merge pull request #250 from techsy730/UnorderedCollectors
    
    Make non-linked OpenHashSet implementations report `UNORDERED`

[33mcommit 1fd06325503eab317e9132e7210b5f5175f6877e[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Apr 18 14:34:52 2021 -0500

    Fix mismatched indentation

[33mcommit 469ff82012d6f2b4c5ac0d4cc153ad441fbe8612[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Apr 18 14:33:03 2021 -0500

    Fix some unintended whitespace changes.
    
    Use `*` on the start of line of block comments to let the formatter know not to indent these, the space is what we want.

[33mcommit 4b083d9d3e47ab569ecd80995a4c37d52585776d[m
Merge: 6b95ddac a5fb0722
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Apr 18 14:29:51 2021 -0500

    Merge remote-tracking branch 'mainline/master' into UnorderedCollectors

[33mcommit 6b95ddacdcbb969d20fe39872a75c053557395cf[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Apr 18 14:06:36 2021 -0500

    Make non-linked OpenHashSet implementations report `UNORDERED`
    
    This lets the Java stream framework know that the returned Collector does
    not commit to preserving order, so the pipeline knows it doesn't have to
    commit to keeping order since the destination is going to scramble order
    anyways.
    
    Fixes #249

[33mcommit a5fb072200502d5e14b0feaf1e74f726248905bb[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Apr 9 18:13:00 2021 +0100

    Fixed spurious package export

[33mcommit fc3325c4d8df893e5f6ce94a8f813b07bd4a5e0b[m
Merge: 9136e977 b25e3777
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Apr 9 17:42:29 2021 +0100

    Merge pull request #247 from mernst/readme-building
    
    Clarify building instructions

[33mcommit b25e3777135ea11e4ab9ddc0a8ad29450bb4e14b[m
Author: Michael Ernst <mernst@cs.washington.edu>
Date:   Fri Apr 9 09:23:16 2021 -0700

    Clarify building instructions

[33mcommit 9136e977e3eeb1e0cbe58728f10cf70b91266ef5[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 29 09:14:59 2021 +0100

    Updated docs

[33mcommit 40b6f9685403d4ac087512dff2c4c02ded1dde5e[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 29 08:22:03 2021 +0100

    Updated docs

[33mcommit 16f8e32768b0fb4797a629372c181bd4502721b8[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 29 08:20:08 2021 +0100

    Updated docs

[33mcommit e36c02c356c042c0a6329e6a4a585843d98a7400[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 29 08:18:35 2021 +0100

    Updated docs

[33mcommit be37f85c0c4ca0f5d69500c59e972a843edd3c31[m[33m ([m[1;33mtag: 8.5.4[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 28 15:30:10 2021 +0200

    Fixed jar content

[33mcommit fde599b835a506652694af800ead688a55d96b83[m[33m ([m[1;33mtag: 8.5.3[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 28 01:13:50 2021 +0100

    Fixed POM reference

[33mcommit 19f98eec43dfd7a23fbfeeab2b2c236b4553296f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Mar 27 23:52:08 2021 +0000

    Split Javadoc

[33mcommit 88badf74d11b425ecc07076d89a176f8afd31d65[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Mar 27 14:44:45 2021 +0100

    Removed test

[33mcommit 95005f68ecd4cf2c77f2960c0949308b82b38313[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Mar 27 12:52:57 2021 +0000

    Changed release revision

[33mcommit 2749cf58a9fe30b8b24713e5feb36709c67e7096[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 22 01:00:42 2021 +0100

    Fixed

[33mcommit d3b3ee188b7b6ca280499c22f82cf48f8229fc00[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 22 00:40:43 2021 +0100

    Completed OSGi split

[33mcommit 2175885e54e32f0712d870ec29d32730ec2cba5d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 21 23:26:23 2021 +0000

    Cleaning build dirs

[33mcommit 7ee58a2a1684bfa05f27a79065830902dfd8eb8a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 22 00:23:02 2021 +0100

    Removed Javadoc staging from core/rest

[33mcommit 932f25567dda5e6dcb990b127b84e861d665f0e7[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Mar 22 00:18:18 2021 +0100

    Fixed staging

[33mcommit f20b01d4868b3fd74ded6375c21b6025f409679d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 21 23:44:03 2021 +0100

    Removed old bnd

[33mcommit 194fce87d0583c70c2884d4be7ee647138d14857[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 21 22:43:13 2021 +0000

    Restructured generation and POMs

[33mcommit 2411defb3b1bd7f004ea75a7706ccaebb4dbfc25[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Mar 18 13:42:01 2021 +0000

    Added thanks

[33mcommit dd8818b023bb9d335c1d12b73e062785eef4d7eb[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Mar 18 13:39:57 2021 +0000

    Added thanks

[33mcommit ecb3b9cedcc79cdc52eb8179ccb6ccbee2a339ad[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Mar 18 10:14:35 2021 +0000

    Unmodifiable wrappers now promote generic types as the JDK does

[33mcommit 120466b4f3e177b58cf9f68196fb731556736830[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Mar 16 19:54:39 2021 +0000

    Fixed warnings

[33mcommit 7cd13fe20299bd166bed63332687003857cb903c[m
Merge: 5f768787 417f3f7b
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Mar 16 19:49:30 2021 +0000

    Merge pull request #242 from techsy730/OfMethodCleanup
    
    Fix toXWithExpected size overallocating in parallel stream.

[33mcommit 417f3f7b7a27a2c1fbab9dc7923d7ee5abe2b385[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Mar 15 09:56:41 2021 -0500

    Even more Javadoc corrections

[33mcommit 1ab5784e37b5ffcf1532a1784d6f2c949cbc864f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Mar 15 09:42:52 2021 -0500

    Clean up Javadocs some

[33mcommit e432791867f61af14ce42d3fd994a562801e6518[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Mar 13 22:13:16 2021 -0600

    Fix toXWithExpected size overallocating in parallel stream.
    
    This is accomplished by having the `Supplier` preallocate a `Collection`
    of full expected size for the first collection allocation in the first thread,
    1/2 expected size for the second, 1/3 for the third, etc.
    
    This reduces the minimum _memory_ allocated when using this in a parallel stream
    from Ω(threads * expectedSize) to Ω(threads * H_expectedSize) = Ω(threads * ln(expectedSize))
    Where Ω is the min asymptotically bounding function (Think O notation but for the min instead of max)
    threads is the number of threads the `Stream` will use
    expectedSize is the value of the expectedSize parameter given to `toXWithExpectedSize`
    and H_n is the nth harmonic number, 1 + 1/2 + 1/3 + ... + 1/n
      For a more familiar complexity comparison, Θ(H_n) = Θ(ln(n)) (Θ is like O notation but bounded above and below)
      as the difference between H_n and ln(n) approach a constant (the Euler–Mascheroni constant)
    
    ...What are you talking about, I'm not just flexing math knowledge. <_< >_>
    
    It's certainly not perfect. The 4nd thread isn't assured to be the 4th to allocate for example.
    And not all Spliterators take a split-by-two approach. But it shouldn't be any worse in performance
    then not providing a size estimate at all (unless you radically overestimate)

[33mcommit 5f7687874bf09899387f00018e372ee7caefaaa2[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Mar 14 00:12:50 2021 +0100

    Tweaking

[33mcommit fc2fe21ab41d929fe37c09127fcfddfdd4471fe2[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 17:00:24 2021 +0100

    Spitting seems to work

[33mcommit 458735fcde5fda3c32c63b38dd46ac8ccf5dd6f1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 15:20:54 2021 +0000

    New bind files

[33mcommit 09a7c963f29e42a2e38b9e376a628e647f414df1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 16:11:20 2021 +0100

    Fixed

[33mcommit a31691dbfbe62245605ef2cc55a4014bb55946fe[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 15:11:02 2021 +0000

    New POMs

[33mcommit be0165c55e7eb7d5f6fce5d8c1c8bdb3bfdbe233[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 15:09:50 2021 +0000

    Restructured for jar splitting

[33mcommit c04206d3a50887ec5feb316a886ec65ccc3edf6e[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 13:03:56 2021 +0000

    Moved out references

[33mcommit 5f3aff7c7e28de9dabdbc296534035408176d905[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Mar 12 09:27:58 2021 +0000

    jar-splitting script

[33mcommit 484542a8f73cf403dbcd6b02974ec72bd67b053c[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 18 00:57:59 2021 +0000

    Lexicographical comparator for type-specific pairs

[33mcommit 08bf6a760ffbb51400860fdfd0ad307fa10c6892[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 18 00:47:43 2021 +0000

    Lexicographical comparator for pairs

[33mcommit fe5fc450b93bfc12a70ce783e015ba0f979fdc1e[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Feb 18 00:24:15 2021 +0000

    Added warning and examples about for-each iteration

[33mcommit ac007b1221f8a4b8f3c093e95f34237a09623b95[m[33m ([m[1;33mtag: 8.5.2[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Feb 1 16:59:27 2021 +0000

    Bumped revision

[33mcommit 998cdfbefb8d248041a748ed4f2733168863598d[m
Merge: 6407623b c70aceeb
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Feb 1 16:54:27 2021 +0000

    Merge pull request #234 from techsy730/LinkedHashMapForEachRemaining
    
    Fix AbstractMap containing a stack overflow containsValue

[33mcommit 6407623b980cfdf17962afe13b3f167c5f20455e[m
Merge: a9711513 480a1cbc
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Feb 1 14:32:52 2021 +0000

    Merge pull request #232 from techsy730/LinkedHashMapForEachRemaining
    
    Fix issues with Map view iterators and spliterators

[33mcommit c70aceeb8f31c3e800269724f3e87d0015360f79[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 10:51:15 2021 -0600

    Fix whitespace issues (spaces instead of tabs)

[33mcommit eabcbe2325de71dc150b72a520f1f5ce7ef1d9cf[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 10:46:35 2021 -0600

    Fix a dangling '}'

[33mcommit 527927153fa34d2c2d279704b772bd3e85bbb549[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 10:30:43 2021 -0600

    Fix a unintended format change

[33mcommit 17eb6576424309756cb5a333203eedacbd1a7786[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 10:24:53 2021 -0600

    Fix AbstractMap containing a stack overflow containsValue
    
    If both the default `containsValue` and the default `values` methods are
    inherited by an implementating class, they will get a `StackOverflowError`
    on trying to test for a value being present.
    
    This is because the default `values().contains` calls `containsValue`, but
    the default `containsValue` calls `values().contains`.
    
    Now make the default `containsValues` loop over the entry set.
    
    Add a comment that you should probably override this is your `values()`
    has a better implementation. Same also retroactively applied to `containsKey`
    and `keySet()`.
    
    Finally, expands `AbstractInt2IntMapTest` to include the generic suite of tests
    from `Int2IntMapGenericTest`, with a dummy testonly implementation that implements
    the bare minimum for a mutable Int2Int map, to test as many of the `AbstractInt2IntMap`'s
    default methods as possible.

[33mcommit 480a1cbc16ad189058edb08db45f4e9deb2684fc[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 07:19:45 2021 -0600

    Minor grammar fix in comments of OpenHashMap

[33mcommit c7a606f6bc89db8258c2cb5352c188a6f5c16abf[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Feb 1 07:15:26 2021 -0600

    Partial revert of commit 7615e085f5478f79e8a3edd6dcb34088326a9101
    
    Turns out, in the Java API and fastutil, there are no Itrator backed Spliterators
    that actually gives the iterator to multiple splits, and thus the iterator will
    never be used by multiple threads. This makes the iterator's thread safety, or
    lack thereof, is a non-issue.
    
    The overrides of spliterator where useful though, so those have been kept, just
    now using fastiterator if possible.

[33mcommit a338b2a7dd9498fd136878ca4a5b161e87c94232[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 31 22:31:37 2021 -0600

    Clarify that OpenHashMap's views' forEachRemaining are inherited

[33mcommit 7615e085f5478f79e8a3edd6dcb34088326a9101[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 31 22:15:29 2021 -0600

    Fix up unsafe uses of fastIterator backed Splitertors.
    
    fastIterator, with its Entry sharing nature, is _thread hostile_. Not even external
    locking can make it safe for use in parallel contexts. Thus you absolutely
    should not wrap them in spliterators and then make a parallel stream on them.
    
    This change fixes spliterators that were trying to wrap the fastIterator, and instead
    makes them use the non fast iterator instead for spliterators.
    (Other single thread only use cases continue to use the fastIterator if present).
    
    Also puts various "big scary warnings" in places where FastIterators can be returned
    to the user.

[33mcommit 4ed7f94735631a3110a7f32fb8c7a6b4257ff16c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 31 21:12:04 2021 -0600

    Fix many issues with map iteration and spliteration.
    
    Fix issues where not all the ways to iterate `keySet` or `values` in a
    LinkedOpenHashMap would follow the proper order (instead falling back to regular OpenHashMap order).
    
    Make sure all OpenHashMap's (and their Linked and Custom cousins) views have proper iterators and spliterators,
    saving a lot of implicit casts by the generics system.
    
    Add unit tests for all these.

[33mcommit a9711513eab68fba11424f9616c4f3ef074cd890[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 31 17:46:43 2021 +0000

    Reversed loop

[33mcommit b57c61a3bf1f1a7a2eb90ea4e4a017200324ada8[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 31 16:50:23 2021 +0000

    Fixed wrong implementation of forEachRemaining() in hash-based containers

[33mcommit 7cef43b038b251929be149fd224c24a8c063c5df[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 31 13:53:42 2021 +0000

    Added test for but in hash-based forEachRemaining()

[33mcommit 8e4db6044cdfe47cf1b30e470fb2cfaff4523981[m[33m ([m[1;33mtag: 8.5.1[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 19:00:05 2021 +0000

    Fixed Javadoc

[33mcommit 105863c0405940fb8aa09f321231744bb7635450[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 18:57:56 2021 +0000

    Added missing disambiguation method for type-specific Map.merge()

[33mcommit 68af79823843530428d80364086cbb4acb2a4837[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 18:31:59 2021 +0000

    Bumped revision

[33mcommit 16291fb19a372ba0e9f435a354c62966d7cb3576[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 16:50:21 2021 +0000

    Fixed bug in AbstractIndexBasedBigIterator

[33mcommit b53b1e479fe793f44285d182d813342296edd38e[m[33m ([m[1;33mtag: 8.5.0[m[33m)[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 14:39:19 2021 +0000

    Bumped dates (again)

[33mcommit 56e4c27c3f0a9c4e7bb6aabfd581476b4eb97df1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 14:29:58 2021 +0000

    Bumped dates

[33mcommit 4243c599ddbdbbf7cef18f380a66bc2306e2811c[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 15:12:35 2021 +0100

    Fixed types incompatible with javac 15

[33mcommit b8e054291e0c66bb5784e4fd8e7455f1d4471bcc[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 13:50:22 2021 +0000

    Fixed warnings

[33mcommit c375a73db49cab344d061abbae81e054f552e681[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 29 13:23:07 2021 +0000

    Fixed Javadoc

[33mcommit c8f0a590642c33a939108e5b07eace3b52b0f25b[m
Merge: ed039451 e25b9637
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 27 12:41:54 2021 +0000

    Merge pull request #228 from techsy730/SubListForImmutableList
    
    Apply ArrayList.subList optimizations to BigArrayBigList

[33mcommit e25b96373c66482d3ddd244c900807c4d75faa9a[m
Merge: 80d0bb3b ed039451
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Jan 27 06:38:43 2021 -0600

    Merge branch 'master' of https://github.com/vigna/fastutil into SubListForImmutableList

[33mcommit ed039451dc805a0eec5b33e3ebec2495033433ae[m
Merge: 63e52127 3afc5204
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 27 08:16:00 2021 +0000

    Merge pull request #230 from techsy730/EmptyArrayListConstruction
    
    Add a faster case if BigArrayBigList.of() (no arguments) is called.

[33mcommit 80d0bb3bc23bffc8395f39b94981349966579b6d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 26 19:15:16 2021 -0600

    Make ImmutableList.subList().spliterator().characteristics() report IMMUTABLE.

[33mcommit 3afc5204f563667c44f6ce24332010fa879d5b23[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 26 11:19:57 2021 -0600

    Add a faster case if BigArrayBigList.of() (no arguments) is called.
    
    Instead of newly creating an empty BigArray, now it fallsback to the default constructor.
    This will allow it to have much better resizing performance, as instead of 0->1 on first
    add, it will go 0->10 (because of DEFAULT_EMPTY_BIG_ARRAY being used now).
    
    The array based of remains the same, we need to ensure the same runtime type is kept,
    even if empty.
    
    Also minor doc updates to ArrayList as well.

[33mcommit ba2c34033ab34913deb833cca6ea75330e5479a9[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 26 10:43:46 2021 -0600

    Make BigArrayBigList use backwards loops for equals methods.
    
    According to BigArrays.equals, this is faster then the traditional
    forwards loop for big arrays, at least in OpenJDK 8 and below (with Java 8 being our target version).

[33mcommit b84d1cc54e8691ed938d5329b6c612927819a2ce[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 26 10:01:17 2021 -0600

    Minor comment fixes to IntArrayListTest and IntImmutableListTest

[33mcommit f65e07bc828dc1ed2b8e6ca06008c6be98a7f691[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 26 10:00:26 2021 -0600

    Also apply optimizations of ArrayList.subList to BigArrayBigList

[33mcommit 63e521272be945e7f73ffe666b20dd8af29ed0ca[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 25 14:37:02 2021 +0000

    Fixed warnings

[33mcommit 8f2345650e51627f9a32534599595e69ca5d75b1[m
Merge: 1706b532 d03ccaae
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 25 13:40:19 2021 +0000

    Merge pull request #226 from techsy730/SubListForImmutableList
    
    Sub list for immutable list

[33mcommit d03ccaaea0cc485a80b8acf85eaf6091e3f34986[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 24 14:57:04 2021 -0600

    Add comment about no validation to ImmutableSubList constructor

[33mcommit b7b7a2041e2e41ec2b1641e3f385f45e4bde9ab8[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 24 12:11:37 2021 -0600

    Also apply equals and compareTo optimizations to SubList of ArrayList

[33mcommit 49b56ecfb1f298f2f0a7a01eede8bde242dfb836[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 24 12:11:01 2021 -0600

    Test compareTo, make sublist serializable

[33mcommit 4b6fbfb142a451a412e757a74e9b9e186fcd9cb3[m
Merge: 4eb48e0a 1706b532
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 24 10:39:29 2021 -0600

    Merge remote-tracking branch 'mainline/master' into SubListForImmutableList

[33mcommit 1706b5323b5ab9a5ece3efbe58074206bb11f835[m
Merge: c772ca9e 4e83b6dd
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 24 16:26:48 2021 +0000

    Merge pull request #225 from techsy730/ImmutableListEqualsFix
    
    Fix a rather critical bug where ImmutableList.equals would return true erroneosly

[33mcommit c772ca9e05905a1571b5546f402536b2f2b9dd6b[m
Merge: 70cad024 bed6b8f8
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 24 16:26:27 2021 +0000

    Merge pull request #227 from techsy730/KeyReferenceEqualityMacro
    
    Replace KEY_CLASS_Reference with KEYS_USE_REFERENCE_EQUALITY

[33mcommit bed6b8f8c11daa213c8a721b6bcb8d9388f93d0d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 12:07:07 2021 -0600

    Replace KEY_CLASS_Reference with KEYS_USE_REFERENCE_EQUALITY
    
    This is much clearer that we mean the types that use `==` for equality
    testing instead of `.equals`, and not confuse it with `KEYS_REFERENCE`
    macro which means any types using Object backed members.
    
    Also documents the gotcha of trying to use a Reference based and a
    non-Reference based type together (e.g. you may get non symmetric `equals`)
    
    Also does the same for VALUE.

[33mcommit 4eb48e0a6ff261886b6c2d2400c85dc2e993b9a2[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 11:38:45 2021 -0600

    Make ArrayList.equals(ArrayList) (and compareTo) use @apiNote as well

[33mcommit f2b6cf22756cbfb7339aab53c5a30146298becf9[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 11:38:01 2021 -0600

    Fix some compilation issues and add tests for ImmutableSubList

[33mcommit 714a52eb15b10d004002f8d2895ea53f26290ed0[m
Merge: de649a5e 4e83b6dd
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 10:52:01 2021 -0600

    Merge branch 'ImmutableListEqualsFix' into SubListForImmutableList

[33mcommit 4e83b6dd1d1fe57c1f60ecabbbd498452cbe0017[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 10:45:06 2021 -0600

    Fix a rather critical bug where ImmutableList.equals would return true erroneosly
    
    Would happen to return true if any ImmutableList was given, equal contents or not.

[33mcommit de649a5e6ffc753913ec30648c86327f4ef25a65[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 23 10:39:19 2021 -0600

    Add a fast subList for ImmutableList.
    
    Currently ImmutableList.subList doesn't return an ImmutableList itself
    due to the current implementation of ImmutableList being closely tied to
    the idea the full array is the whole list.
    This may change in a future release.

[33mcommit 70cad024eda7c409180e3226ce36445254ebdcb3[m
Merge: 6bacc899 427393a2
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 15 11:59:24 2021 +0000

    Merge pull request #222 from techsy730/RandomAccessListSpliterator
    
    Fix a missing import that was breaking Javadocs

[33mcommit 427393a2d1785adf87c62af0a04a0c1f4dbc19b2[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Jan 15 05:56:21 2021 -0600

    Fix a missing import that was breaking Javadocs

[33mcommit 6bacc899071f3603bdc92f1b881f3ae6db76b0c3[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 15 11:39:51 2021 +0000

    Redefined compilation conditionals for deprecated merge method

[33mcommit 49eec2df435864453dd332d03adce41550663e30[m
Merge: 8b32ce13 e30c9e0e
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Jan 15 11:12:56 2021 +0000

    Merge pull request #220 from techsy730/RandomAccessListSpliterator
    
    Further document the spliterator methods in interfaces.

[33mcommit e30c9e0e267b4307dc7f412358cdaba5f3499e5d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:44:02 2021 -0600

    Give the name of the type instead of calling them all collection.

[33mcommit 69f62286d582ddfba5dc40237c59922a463510d0[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:43:30 2021 -0600

    Also document spliterator() of BigList.

[33mcommit 99fc1dfdc61a9211659905c5592fb99961bb11f0[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:25:21 2021 -0600

    Further mention the requirement the getComparator requirements.

[33mcommit 2a26121fb7ee025bcdd5a8eddc956fcf0d22c31f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:21:28 2021 -0600

    Fix wrong link in SortedSet.

[33mcommit dc0aff809bd4a53481efd7103f42733126fc6c34[m
Merge: 49f9b149 8b32ce13
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:07:44 2021 -0600

    Merge branch 'master' of https://github.com/vigna/fastutil into RandomAccessListSpliterator

[33mcommit 49f9b149ba21da18e5b8d232b77b2aba8793073f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Jan 14 21:04:59 2021 -0600

    Further document the spliterator methods in interfaces.
    
    Also pull the RandomAccess check for the default implementation of
    spliterator() from AbstractList into List, to match up with what java.util.List does.

[33mcommit 8b32ce1363e547ed497d7de4931633c04764291a[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 21:57:19 2021 +0000

    Fixed options to compile for Java 8

[33mcommit 78bebfa7c573a327ade980be2e4049f228be785d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 17:58:13 2021 +0000

    Restored

[33mcommit 096d17526e8eb62ade2ddc8f5455c31d029d7458[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 17:54:18 2021 +0000

    Faster methods for addAll() on lists

[33mcommit 26bcc27f09275d14a5ce16efa250f6f447042e52[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 17:53:33 2021 +0000

    Renamed getSizeOf() to sizeOf()

[33mcommit acbfeac0d87ac94b40971fd4741177d720d1809d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 17:53:12 2021 +0000

    Fixed tests to work with arbitrary big-array segments

[33mcommit 276086b4bbd45c3b984d6d08dd99eb305678d275[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 10:14:21 2021 +0000

    Tweaking

[33mcommit 3e44ff7632282d59c0c7baffa3730f7d17e708c4[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 10:07:10 2021 +0000

    Tweaking

[33mcommit 6a778fa5bf5b0ec2930b7a512c47a4260f21d397[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 14 09:49:28 2021 +0000

    Specialized methods for addAll() in list and big lists

[33mcommit af581810d9d6e3dd3d8b1a9281b4427d1c12c108[m
Merge: 2f593413 f5b8bf81
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 13 15:07:02 2021 +0000

    Merge pull request #218 from techsy730/RandomAccessListSpliterator
    
    Document efficient spliterator for a RandomAccess AbstractList

[33mcommit 2f59341384a0912140b0c6a77a442f6e3ee6b627[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 13 15:02:15 2021 +0000

    Type-specific Map.merge() methods

[33mcommit f5b8bf81ad46bde265fff18d354cd3a033e91d01[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Jan 13 08:43:22 2021 -0600

    Clarify that the late-binding conforms to default method spec
    
    Not that the spec of List.spliterator() requires late-binding,
    rather the default implementation in the interface is.

[33mcommit 52de63ca2cb19a1fa62ae1656d13556a2ed30719[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Jan 13 08:36:10 2021 -0600

    Make the returned Spliterators of AbstractList late-binding
    
    This brings them into spec of the List interface, which (by virtue
    of Collection's interface) specifies late-binding size behavior.
    
    Same for AbstractBigList

[33mcommit fc17c0240f6c10a0bd41b695365b3e7a260a63b0[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Jan 13 08:19:20 2021 -0600

    Document effecient spliterator for a RandomAccess AbstractList
    
    AbstractList gives a mostly effecient spliterator for RandomAccess subclasses.
    While subclasses can certainly do better by abusing internals, at this one
    won't display the terrible splitting performance that the Iterator based one
    from the root List interface does.
    
    We should document this fact (and make it an assurance) so subclassers don't
    feel obligated to write their own Spliterator to not get terrible parallel
    performance.
    
    Same for AbstractBigList.

[33mcommit b00eeaba0b9de91ce9856eabd6bd8b0f03bc3616[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 13 09:27:53 2021 +0000

    Minor Javadoc fixes

[33mcommit d08d3cc908139faff300e987c459a61db4ed4cb7[m
Merge: f5b9c8a0 ced97ee9
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Jan 13 08:31:44 2021 +0000

    Merge pull request #217 from techsy730/AddJavadocs
    
    Minor touchups

[33mcommit ced97ee9329390dfc6fe84fb39a60b4aa9edef03[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 19:28:14 2021 -0600

    Add STD_KEY_SPLITERATORS
    
    Used for methods that take a Spliterator, allowing Object based ones
    to accept standard Spliterators.
    
    Like with Iterator, a version of this macro that gives the Java library
    primitive spliterators for int/long/double may be considered in the future.

[33mcommit 54bc874e287ab5573307e26af8e030bb144df519[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 19:14:02 2021 -0600

    Use STD_KEY_ITERATOR instead of just KEY_ITERATOR in Iterators.drv
    
    This lets regular Iterators be used for Object based Iterators static utility class.
    
    Perhaps in future work int/long/double Iterators can be updated to accept
    java.util.PrimitiveIterator.OfInt/Long/Double as well, as well as a
    STD_KEY_SPLITERATOR for methods taking spliterators.

[33mcommit 2c21b7be73a1819517a67fb786854191b04d0b13[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 10:15:01 2021 -0600

    Fix extra paren breaking build

[33mcommit c3601ff10ac4b91228f4b5a01dedfac6626db38c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 10:13:23 2021 -0600

    Undeprecate the JDK primitive overloads of any/all/indexOf
    
    The overhead is now documented in an @implNote, which is more in line with
    other similar methods in fastutil.

[33mcommit 7d59a664c895502d7dc966c53afc602d53e6192c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 10:07:05 2021 -0600

    Typo fix: prediate -> predicate

[33mcommit 0643f0e44c0295b320083ba6be6b2540a4c40efd[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 10:05:04 2021 -0600

    Fix tab instead of space

[33mcommit c1943542fe468a7c5ba5aabb0f955e0858789199[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 10:03:39 2021 -0600

    Mention the equivalent stream operations for Spliterator.onEachMatching.

[33mcommit cd2a1f64c037109ed1577c31ffef24b6e496bc6f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 09:53:08 2021 -0600

    Make List.replaceAll forward to the type specific one if possible.
    
    Since, for example, ByteUnaryOperator is a subclass of
    java.util.function.IntUnaryOperator, this is a possibility we should
    detect and exploit if possible.

[33mcommit ab30c09b455c6a0dbfe8afe6768b9631d24d8288[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 09:40:53 2021 -0600

    Document Spliterators.onEachMatching
    
    Also make it accept the new type specific predicates.

[33mcommit 987744a55e5c8b1148bcc7b87fc5832d462112b4[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Jan 12 09:35:14 2021 -0600

    Add documentation for Iterators.any/all/indexOf

[33mcommit f5b9c8a0a0440b7b74788370910cdd1387bbda3b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 11 19:57:40 2021 +0000

    replaceAll() now delegates

[33mcommit 2be208e97cedca8e06a62195677aa4f102fe8084[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 9 19:45:19 2021 +0000

    Added @apiNote

[33mcommit 243d52ebc8cd606623c2162493f460ac1504a332[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 9 10:51:07 2021 +0000

    Bumped copyrights, minor javadoc editing

[33mcommit 63e035ae75f2b6303d8c48a9ecb4ebb40da5895f[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 9 10:50:56 2021 +0000

    Fixed clean target

[33mcommit 63acd4fada67277ecb58c8296f8921dc9f5044b2[m
Merge: 6b207e6a 005388ea
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Jan 7 11:53:52 2021 +0000

    Merge pull request #216 from vigna/small_types
    
    Core Types only compilation

[33mcommit 005388ea500bf302e361780bc7b71d27a2e056e2[m
Author: Tobias Meggendorfer <tobias@meggendorfer.de>
Date:   Wed Jan 6 15:21:23 2021 +0100

    core types compilation

[33mcommit 6b207e6aed4f48ed4fd50ff9b9e6efb72b03d7dc[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 4 16:00:07 2021 +0000

    Rewrote replaceAll() overrides consistently

[33mcommit 41ff8b4349b394f84e21dc88520d4180d5f50565[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 4 14:57:19 2021 +0000

    Fixed deserialization bug in front-coded big lists of arrays

[33mcommit f2bf756ece3bed35b8c165205a1e5f53ab8899b4[m
Merge: 9c7c01c0 e528774e
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Jan 4 09:54:01 2021 +0000

    Merge pull request #215 from techsy730/SimplifyConditionals
    
    Remove the last uses of KEY_WIDENED and VALUE_WIDENED

[33mcommit e528774e7cc4af80edcf4516c8ff17e31d92caca[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sun Jan 3 10:45:23 2021 -0600

    Remove the last uses of KEY_WIDENED and VALUE_WIDENED
    
    Remove these macros from gencsource.sh
    
    Per https://github.com/vigna/fastutil/issues/201, we are removing these macros.

[33mcommit 9c7c01c06c11b8567309bad6ce0e397f19fa1cd4[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 12:56:00 2021 +0000

    Fixed makefile

[33mcommit 923a6cb6d3785b94c81d84954adbcbc80b9e8f99[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 12:22:26 2021 +0000

    First round of cleanup for NO_SMALL_TYPES (no more conditional code)

[33mcommit 3b5000e615480c39205d4fe4e6980da2d0a57bf7[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 11:06:21 2021 +0000

    Minor fixes

[33mcommit a4dcaead3ac800fcd9ce8671075b3b7ad2439aa6[m
Merge: d7f054f1 fa7dc19d
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 11:04:46 2021 +0000

    Merge pull request #210 from techsy730/BooleanPredicate
    
    Add identity() to UnaryOperator

[33mcommit d7f054f103d50d039b70635d09cce4184fe60c10[m
Merge: 633910fc 2b43345d
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 11:03:43 2021 +0000

    Merge pull request #212 from techsy730/OptimizeCollectorWithExpectedSizeForParallelStreams
    
    Warn about preallocation collectors and parallel streams

[33mcommit 633910fc15dfd2f58c2ce9a4eb3d5842cd74df21[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 10:58:24 2021 +0000

    Removed shim class for spliterators by new AbstractSpliterator class

[33mcommit 794f5c3609910cbf880d90f9cd8457c9f1c988af[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sun Jan 3 10:44:45 2021 +0000

    Removed shim class for iterators and deprecation from AbstractIterator

[33mcommit a33fca830669f86b0269874250e6603cfbd1eee3[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 2 21:40:47 2021 +0000

    Minor fixes

[33mcommit fa7dc19d2a47580b4589bf0d19982de214f273e0[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 2 15:28:17 2021 -0600

    Also add negation for numeric UnaryOperation.
    
    This one does arithmetic negation.

[33mcommit 2b43345dd133db685ceb70a76ec07fe9834f9e1c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 2 15:04:46 2021 -0600

    Warn about preallocation collectors and parallel streams
    
    Per https://github.com/vigna/fastutil/issues/211, the toXWithExpectedSize
    collection methods will preallocate the full size for every worker thread
    when used on parallel streams.
    This is rather wasteful, as most worker threads will not handle the full
    contents of the stream.
    
    Actually solving this shortcoming may come in future work, but for now
    we just warn about it in an @implNote

[33mcommit 2135e131aaac5762ac56ed08da3527d8c69022da[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 2 20:54:50 2021 +0000

    Solved naming and ambiguity problems of List.replaceAll()

[33mcommit c46acf307f2670d2fab8caeebb9af01b33d7341d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 2 14:51:46 2021 -0600

    Remove the fact that BooleanPredicate extends BooleanUnaryOperator.
    
    Despite them being the same mathmatical concept, it was pointed out
    that they are usually used with different symantic meanings.
    A test vs a function.
    
    The identity (and negation) static utility methods remain.

[33mcommit 6161f4e19e2fdd08bc04cc5acaffaa70d9043a53[m
Author: C. Sean Young <csyoung@google.com>
Date:   Sat Jan 2 13:48:16 2021 -0600

    Make BooleanPredicate extend BooleanUnaryOperator, as it is a unary operation.
    
    Also add a identity to UnaryOperators (and a negation for BooleanUnaryOperator).

[33mcommit d49563e064ce09e29219209b57d8eea376138bca[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 2 18:46:49 2021 +0000

    Unary operators

[33mcommit 4be250e92d8ce6eb0efcaa4545046067340aaa9b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Sat Jan 2 18:19:58 2021 +0000

    Renamed map methods

[33mcommit 8756de031bc401d805e6b09fdba5c7bf51777909[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 31 14:52:22 2020 +0000

    Fixed missing #if

[33mcommit b301602f8adab6db17a6832ac0c30d13bd6f27eb[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 17:09:53 2020 +0000

    Now BinaryOperator always have an apply() method

[33mcommit 68d0d57aee8cbd96bd1bc5b8a4afe081a4879f28[m
Merge: 61b8ac0d 8ea67941
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 15:36:17 2020 +0000

    Merge pull request #206 from techsy730/SimplifyConditionals
    
    Simplify conditionals

[33mcommit 8ea67941282c85fab9d7e5a283e15f2f57a886c5[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Dec 30 09:27:52 2020 -0600

    Fix up some of the object delegating overloads of Iterators/Spliterators.
    
    Also take advantage of KEYS_BYTE_CHAR_SHORT_FLOAT better.

[33mcommit 135d440cd71ec5862112f94e18187236f66dffac[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Dec 30 09:14:41 2020 -0600

    Take advantage of the new KEYS_BYTE_CHAR_SHORT_FLOAT macro.
    
    This allows us to simplify some of the conditionals.

[33mcommit 61b8ac0dd9ed3cd68752ac0381776b2197787b03[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 13:50:07 2020 +0000

    Almost completely got rid of KEY_WIDENED

[33mcommit ddb8b23a38f844171ccef8e786bd3b0d384ca5a7[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 10:08:26 2020 +0000

    Refactored #define's

[33mcommit 6c40e5271eb31c15074115586273c028bde84987[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 01:15:16 2020 +0000

    Fixed formatting

[33mcommit 2eb04d07e84908988a0b05b5c059d01ade2758ad[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 01:06:21 2020 +0000

    Fixed warnings

[33mcommit 9a1506115b947c1d3943c86890963201f7d59800[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 01:01:37 2020 +0000

    More docs and tests

[33mcommit bc1208fbf9f84de680f759c1f707200c5686c2c3[m
Merge: 286b34a6 b8351592
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 01:00:57 2020 +0000

    Merge pull request #205 from techsy730/NoCopyOnListArray
    
    Don't have List.of(...) make a defensive copy.

[33mcommit 286b34a665ae40f69512b4d39b774457505fbb95[m
Merge: c809b9e3 347552a0
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Wed Dec 30 01:00:25 2020 +0000

    Merge pull request #203 from techsy730/SimplifyConditionals
    
    Simplify forEach, forEachRemaining, and removeIf conditionals

[33mcommit b835159290b074622ed072b84bf0faa8828c54c9[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 29 15:41:53 2020 -0600

    Don't have List.of(...) make a defensive copy.
    
    If we don't even do it for ImmutableList.of(...), there is no point
    in the root List interface to do it.

[33mcommit 347552a0f21ca516ac5a11f4eb365f427ae4323f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 29 15:34:45 2020 -0600

    Standardize caveats of overloads.

[33mcommit 06871d9ef6bdea267055eba891f2dc68b858de99[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 29 15:17:54 2020 -0600

    Add tests for the overloads of forEach, forEachRemaining, and removeIf.
    
    Also make a tiny adjustment to the Javadoc, mentioning widening casts are performed.

[33mcommit db2681df9ff6a28af3dc82facaf52a6f50ea7d0d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 29 14:46:11 2020 -0600

    Further cleanups
    
    * Remove <br> tag usage
    * Add @apiNote about which overload implementing classes should overide
    * Add a JDK primitive forEachRemaining for Iterator, to be consistent with the other lambda operations

[33mcommit c809b9e3e1bf1cca68ee97630c21c58a5f6d2617[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 20:30:08 2020 +0000

    Refactored Consumer/Predicate using #define's method types

[33mcommit f841f1a04e610cbc2a8f73649baba0faac59dee8[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 29 11:57:55 2020 -0600

    Simplify forEach, forEachRemaining, and removeIf.
    
    Also adjusts the conditional of Iterable.drv, Iterator.drv, and Collection.drv
    to be in line with the style guidelines in
    https://github.com/vigna/fastutil/issues/201

[33mcommit 55dcb2876f0e11dce74f12475ee90c4246b5af32[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 16:59:50 2020 +0000

    More accurate implementation note

[33mcommit c9742ce3ba1fa8bead992ff4e44f920d9878bad4[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 16:53:58 2020 +0000

    Refactoring of Predicate following new best practice

[33mcommit 4f97e83a1be9f7bc00bf00b7a7768769502cbb22[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 16:23:40 2020 +0000

    Refactoring of Consumer following new best practice

[33mcommit 4b1b6c171fa454ae15892d5644b82c00abc0deb4[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 15:43:22 2020 +0000

    First round of refactoring

[33mcommit 88813deecb24bbc9ce1678e449484d61636dafa0[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 14:43:12 2020 +0000

    Fixed package statement positions

[33mcommit 3b90f64eb85d6d33ed21fc9218bf6f8a02f20860[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 29 14:42:11 2020 +0000

    Fixed package statement positions

[33mcommit 94547b388bc1c4d1a7376d40cab080cae8186265[m
Merge: 341ccb1f 5ca2a857
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 24 09:59:44 2020 +0000

    Merge pull request #199 from techsy730/Predicate
    
    Fix removeIf ambiguity

[33mcommit 5ca2a8572bb48303b9840015907f7242f97eab0b[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 22 14:50:02 2020 -0600

    Simplify METHOD_ARG_PREDICATE macro definition a bit.

[33mcommit 040de4c65a1331c7960a96068b636185e074d072[m
Merge: 6d8228a6 341ccb1f
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 22 14:22:40 2020 -0600

    Merge remote-tracking branch 'mainline/master' into Predicate

[33mcommit 341ccb1f9aed2b61f3eb76f49b670bf1ce66ffdd[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 17:26:25 2020 +0000

    Simplified

[33mcommit 6d8228a602e14fd5d0718f030720c5ee1c6f6df6[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 22 11:23:55 2020 -0600

    Make Iterators.all/any/indexOf work in terms of the new predicates

[33mcommit afb8182ca98120b22abc1fdc4dc72305ea5a6b27[m
Author: C. Sean Young <csyoung@google.com>
Date:   Tue Dec 22 11:11:00 2020 -0600

    Fix ambiguity caused by overloads of removeIf.
    
    Adds a similar workaround that is already in place for forEach and forEachRemaining.

[33mcommit 86893737691129ebdbe0160dcce21741ba3a567d[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 13:42:05 2020 +0000

    Added suggestion to set up deprecation warnings

[33mcommit 463b3ffb5981ce2219800c9954a2884d0f8f7fca[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 12:50:20 2020 +0000

    Fixed parameterized types of andThen()/compose()

[33mcommit 8822858df68e3112ddbc53fb697e49083ae991d2[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 12:27:28 2020 +0000

    Deprecated non-type-specific andThen()/compose()

[33mcommit 0d48c66597aacace01e60a70f4038803d4aa9525[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 11:54:30 2020 +0000

    Added explanation about Consumer, etc.

[33mcommit 56b6f62bbee2f134eb8576002c56dcfd2b43f963[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 11:37:15 2020 +0000

    Type-specific binary operators

[33mcommit 1f35eafda3b4eab2e1b5426f7500eb3ae2961dea[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 11:01:31 2020 +0000

    Type-specific predicates

[33mcommit b6ea3429c4789ab1d872e64246b5f163aa4942c5[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 10:58:43 2020 +0000

    Type-specific predicates

[33mcommit 4f068ccde0c2e9856cd87ad70943f2b25c21bc2e[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Tue Dec 22 08:55:01 2020 +0000

    Javadoc fixes

[33mcommit 86e8a65d243072c52dd9d2862eef56aeea3692ab[m
Merge: e0369935 fdb44474
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Dec 21 20:49:40 2020 +0000

    Merge pull request #194 from techsy730/ForkJoinPoolSelection
    
    Make fastutil use the current ForkJoinPool if already in one

[33mcommit fdb444746e907c7f5d99ea21da9b3898d204d689[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Dec 21 14:26:23 2020 -0600

    Fix backwards range check.

[33mcommit 202b83caeff4ab4795f7098367afb0b43ccc44c8[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Dec 21 14:24:41 2020 -0600

    Fix compilation error

[33mcommit a0f1ecce76985efd1d73bdede8afee38dce8cfc4[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Dec 21 14:20:16 2020 -0600

    Remove Threading.java, just have the getPool() method in each class.
    
    For lack of a good non-type specific place to put it, getPool() has been
    copied to each type specific Arrays. Unfortunate but a good JVM should be
    able to quickly see these methods are tiny and inline it anyways.

[33mcommit e0369935508d5db7cee50356093613609c6e790b[m
Merge: 61005c1e 61b297d2
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Mon Dec 21 17:43:16 2020 +0000

    Merge pull request #195 from techsy730/8_5_1
    
    Minor fixes (8.5.1)

[33mcommit 896a135b5806bdfdbc0e436164605064dc8ab378[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Dec 21 10:40:44 2020 -0600

    Fix a leftover incomplete comment.

[33mcommit 6489d710d87f64b7a2c9fd797ddb5f8d8f486050[m
Author: C. Sean Young <csyoung@google.com>
Date:   Mon Dec 21 10:22:40 2020 -0600

    Make fastutil use the current ForkJoinPool if already in one
    
    Also provide a facility to specify the default Fastutil pool.

[33mcommit 61b297d213a95563a8078938719adc92338855fc[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 15:31:37 2020 -0600

    Fix ReferenceImmutableList

[33mcommit 192bd76fbd77b72777a7e861edf0b38d13a241c8[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 15:29:44 2020 -0600

    Use the ImmutableList equals and compareTo if possible

[33mcommit 61005c1ee3ff0ff7058127e73e68f6f149ddfb08[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 20:59:52 2020 +0000

    Resolved ambiguity of replaceAll()

[33mcommit 8242ef474db1692b12ca371d37c254c3e69cd8cb[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 14:37:30 2020 -0600

    Suppress "can be static method" warnings in tests.

[33mcommit ddca2c39f0021e07a84524e7c7d8ec9d046670b1[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 14:36:38 2020 -0600

    Use Spliterator.hasCharacteristics for testing
    
    This is much more natural to read then bit twiddling.

[33mcommit 68977f94d5702b16d89f64f6cd195512f87371dd[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 14:28:45 2020 -0600

    Add a test for Streams and of for linked hash sets.
    
    This also adds coverage for Spliterator.asSpliterator, which wasn't covered by unit tests before this.
    This is because LinkedHashSet uses this as you can't effeciently split a LinkedHashSet and preserve order,
    so it just uses the iterator backed fallback.

[33mcommit d5578f6b43f476da52f39c7c87013d54558ffe1c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 14:28:29 2020 -0600

    Fix Javadoc issues in Spliterators

[33mcommit 6a59c563e34b2643f798e5851eae188b868dcbc7[m
Merge: 812eea33 887ae286
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 20:11:51 2020 +0000

    Merge pull request #191 from techsy730/FixSpliteratorConcat
    
    Fix concat'ed spliterators reporting SORTED or DISTINCT when not safe

[33mcommit 887ae2865214dc07a69ee48e3a4db41fafceb780[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 13:38:35 2020 -0600

    Fix rawtypes for ObjectSpliterators

[33mcommit 7ab7c720934969ddeac086a73c9153a6470f0eb2[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 13:26:48 2020 -0600

    Add test for getComparator() of Concatenated spliterators.

[33mcommit 3b1fef023469634552d55daae358bdf4051a705b[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 13:22:15 2020 -0600

    Fix unused import

[33mcommit 4d3ba35dcd8a8ccc72f5040c54831357b88ab2de[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 13:21:01 2020 -0600

    Clean up some and expand on unit tests.

[33mcommit 52d7709e0db3ed02152177845078f0b82b94bfd2[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 12:10:52 2020 -0600

    Fix concat'ed spliterators reporting SORTED or DISTINCT when actually not.
    
    Fixes https://github.com/vigna/fastutil/issues/190

[33mcommit 812eea335c2fc1dcfff73ed2fe373bc398c3b0f4[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 17:35:37 2020 +0000

    Bumped revision

[33mcommit 26ccb67240d6bd91657a900c99a0d9ee2d1f6021[m
Merge: 1f88a987 05cecd83
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 17:32:32 2020 +0000

    Merge pull request #189 from techsy730/AddApiNote
    
    Add some @apiNotes to places they should have been.

[33mcommit 1f88a987c13f2b73479ebdc5cd68e789527aca95[m
Merge: 84f01c0f 1863b2e7
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 17:31:59 2020 +0000

    Merge pull request #188 from techsy730/FastToArrayForArraySet
    
    Add a fast toArray to ArraySet.

[33mcommit 84f01c0f2ac99c19c0da044cb266c69482184af7[m
Merge: 0f15d296 7ed07dc4
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 17:31:47 2020 +0000

    Merge pull request #185 from techsy730/NoMegamorphicCallSites
    
    Make List.of and Set.of bimorphic

[33mcommit 05cecd83f7e115a8efbbe24229ad638c40cc346c[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 11:16:41 2020 -0600

    Add a note to List.sort that null means use natural ordering.
    
    This was already in the primitive versions, but was omitted from the Object based ones.

[33mcommit ed63cfe1040aa0364373c2c21e75dcac40e6d6f7[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 11:07:15 2020 -0600

    Some more places for "strengthns the one given" notes.

[33mcommit 3ff9bd7ca60cbd25b1a559ed33cea72f3fadb27f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 10:47:22 2020 -0600

    Add some @apiNotes to places they should have been.

[33mcommit 1863b2e7027f2c685276d0928f60ec26567f50dd[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 10:39:59 2020 -0600

    Fix unit test.
    
    ArraySet has no elements() method.

[33mcommit 5cd53f93fd4d1634b388ce3e11940f50da6922c4[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 10:36:53 2020 -0600

    Add a fast toArray to ArraySet.

[33mcommit 0f15d296633ccbbe6ddd43c380eb3c98d6c795ae[m
Merge: 1b4464c2 f4a4ebdd
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Fri Dec 18 16:34:34 2020 +0000

    Merge pull request #187 from techsy730/FixUnitTest
    
    Fix an off by one error in ObjectArrayListTest

[33mcommit f4a4ebdda6c62db4e930c5a70efda97bbfe1af18[m
Author: C. Sean Young <csyoung@google.com>
Date:   Fri Dec 18 10:24:27 2020 -0600

    Fix an off by one error in ObjectArrayListTest

[33mcommit 7ed07dc4cf9d4d06bbe650b63e16862d75c44591[m
Merge: bff39fad 1b4464c2
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 16:12:00 2020 -0600

    Merge remote-tracking branch 'mainline/master' into NoMegamorphicCallSites

[33mcommit 1b4464c24df9f0c8f16f49757260721809dd8541[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 18:50:17 2020 +0000

    Fixed more warnings

[33mcommit 24431ffb770c835945df5b14eb2bb669ed687bf1[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 18:47:41 2020 +0000

    Added blurb about collectors

[33mcommit 2c69c703b0cfe656527d16b37478ebfc844bff89[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 18:13:23 2020 +0000

    Fixed more warnings

[33mcommit a16a18b8ec2a74b35340bf82a600ceadda5f24cd[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 17:21:47 2020 +0000

    Removed import

[33mcommit b6f267a1b08aac5fe63dddf67513dcf6aca7be4a[m
Merge: da63de1f c33775d8
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 17:21:35 2020 +0000

    Merge pull request #184 from techsy730/FixWarnings
    
    Fix an unused class and some unused imports.

[33mcommit bff39fad172299feb4f2ea7f7bbe2772b0c7ddc4[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 10:27:39 2020 -0600

    Reference fastutil's bug instead of Guava's bug.
    
    The fastutil bug points to Guava's bug anyways.

[33mcommit 47f1eca026a8e7def8a63791975cd739cceedb22[m
Merge: bf8f0298 da63de1f
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 10:19:16 2020 -0600

    Merge remote-tracking branch 'mainline/master' into NoMegamorphicCallSites

[33mcommit bf8f0298124648d2dd8f9bf2a2af0c6c57b67b90[m
Merge: 64cd7c43 c33775d8
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 10:16:45 2020 -0600

    Merge branch 'FixWarnings' into NoMegamorphicCallSites

[33mcommit 64cd7c43cb90d8295f1b39c2b05f47fd8bad192e[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 10:16:15 2020 -0600

    Make List.of and Set.of dimorphic
    
    https://github.com/vigna/fastutil/issues/183

[33mcommit c33775d8672bc05890d550cfed4150815290df62[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 10:04:08 2020 -0600

    Fix an unused class and some unused imports.

[33mcommit da63de1fc8742202860b349639380f37e7dddd24[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 15:52:29 2020 +0000

    Added @implSpec tag

[33mcommit 72a8f14d6fa4d8ff33a4f828a959dd9b6875ceef[m
Merge: d4b23d0e 0e44f269
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 15:50:40 2020 +0000

    Merge pull request #180 from techsy730/ImmutabilityImprovements
    
    Harden immutability of ImmutableList.

[33mcommit d4b23d0e52775d38da1dd3b010555b891c8e4f2b[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 15:48:44 2020 +0000

    Fixed more warnings

[33mcommit d5bc899685c484405f7a7ed7ea6406100fdefec3[m
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 15:35:19 2020 +0000

    Fixed more warnings

[33mcommit 3cecf4b88de065c9fc42c55bdc2c832919accfda[m
Merge: a0a28830 c2c2c2e9
Author: Sebastiano Vigna <sebastiano.vigna@gmail.com>
Date:   Thu Dec 17 15:31:22 2020 +0000

    Merge pull request #182 from techsy730/FixWarnings
    
    Fix warnings

[33mcommit c2c2c2e93a4cab8b93d35ac69d4cf15bdc60483f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 09:11:26 2020 -0600

    Fix Spliterators bad grammar

[33mcommit 1b975b0ce95d0f29daa2d253245385da46e12b1f[m
Author: C. Sean Young <csyoung@google.com>
Date:   Thu Dec 17 09:07:41 2020 -0600

    More warning fixes

[33mcommit 6fa57a50945102bb3bf5bd9a4a9d2327f853057d[m
Author: C. Sean Young <csyoung@google.com>
Date:   Wed Dec 16 21:20:14 2020 -0600

    Fix the bad grammars
